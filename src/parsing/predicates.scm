(library (parsing predicates)
  (export *and *or *not)
  (import (rnrs (6)))

  (define (*and p1 . preds)
    (define (*and-2 p1 p2)
      (lambda (x)
        (and (p1 x) (p2 x))))
    (fold-left *and-2 p1 preds))

  (define (*not p)
    (lambda (x)
      (not (p x))))

  (define (*or p1 . preds)
    (define (*or-2 p1 p2)
      (lambda (x)
        (or (p1 x) (p2 x))))
    (fold-left *or-2 p1 preds))
)
